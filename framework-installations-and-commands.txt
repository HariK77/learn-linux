////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Symfony:

	Installing Symfony Installer
		$ get https://get.symfony.com/cli/installer -O - | bash
		$ export PATH="$HOME/.symfony/bin:$PATH".  

	Installing using symfony cli
		$ symfony new symfo-codes --full
		$ symfony new symfo-codes  (minimal)

	Installing using composer
		$ composer create-project symfony/website-skeleton symfo-codes
		$ composer create-project symfony/skeleton symfo-codes
		
	Creating db fom cmd
		$ php bin/console doctrine:database:create (it will create a db with the name we provided in connection)

	Commands
		Start Server
		$ symfony server:start

		See all avaialble commands
		$ php bin/console

		Make Controller
		$ php bin/console make:controller MainController

///////////////////////////////////////////////////////////////////////////////////////////////////////////
Laravel:

	Laravel Installation
		$ composer create-project laravel/laravel laravel-sample

	laravel auth
		$ composer require laravel/ui
		$ php artisan ui --auth bootstrap

	Migrate migration tables:
		$ php artisan migrate

	Delete migrated tables
		$ php artisan migrate:rollback

	Delete migrated tables and migrate freshly
		$ php artisan migrate:fresh

	Make model and migration
		$ php artisan make:model Product -m

	Making seeder
		$ php artisan make:seeder ProductTableSeeder

	Seeding db with seeder
		$ php artisan db:seed --class="ProductTableSeeder"

	migrate specific migration table
		$ php artisan migrate --path=/database/migrations/2021_09_15_162252_create_user_types_table.php 
	
	create resourceful controller and include model
		$ php artisan make:controller CustomersController --model=Customer

	Create a middleware
		$ php artisan make:middleware IsAdmin

	To see list of routes avaialble
		$ php artisan route:list

	Create Resourceful controller, model and include model
		$ php artisan make:controller UsersController -r -m User

	Making migration table
		$ php artisan make:migration create_categories_table

	This command should run if we load any files from composer.json manually
		$ composer dump-autoload

	Creating a sym link for storage
		$ php artisan storage:link

	To clear cache
		$ php artisan config:clear
		$ php artisan clear:cache
		$ php artisan clear-compiled 
		$ php artisan route:clear

	To configure cache
		$ php artisan config:cache

	To clear and config cache
		$ php artisan optimize

	Making a ploicy
		$ php artisan make:policy CategoryPolicy -m Category

//////////////////////////////////////////////////////////////////////////////////////////////////
Codeigniter 4

	php version above 7.3
	php-intl extension should be enabled

	Installation:
		$ composer create-project codeigniter4/appstarter codeigniter-4-sample

	Giving permissions for writable folder
		$ sudo chmod -R 0777 writable

	creating .env file
		$ cp env .env

	Creating Controller:
		$ php spark make:controller UserController

	Creating Model:
		$ php spark make:model User

	Creating migration file:
		$ php spark make:migration Users

	Seeding the db with seeder
		$ php spark migrate

	See routes list
		$ php spark routes

	Make a filter
		$ php spark make:filter Auth

////////////////////////////////////////////////////////////////////////////////////////////////////////
TypeScript Setup

	Install typescript:
		$ sudo npm install -g typescript
		
	check typescript version
		$ tsc -v
		
	TypeScript to your local project as dev dependency
		$ npm install typescript --save-dev
		
	Init typescript config for local project
		$ tsc --init

//////////////////////////////////////////////////////////////////////////////////////////////////
Angular Setup

    Installing angular cli
    	$ sudo npm install -g @angular/cli

	Installing angular apps
		$ ng new my-app

    Starting angular server
   		$ ng serve

    Creating component
    	$ ng generate component xyz

///////////////////////////////////////////////////////////////////////////////////////////////
Nest JS Setup

    Installing nestjs cli
    	$ sudo npm i -g @nestjs/cli

    New app creation
    	$ nest new learn-nest

    starting app
    	$ npm run start (or) $ nest start (to be run root folder of project)

    Creating module
    	$ nest g module users

    Installing package
    	$ npm install mysql typeorm @nestjs/typeorm

    Creating Service
    	$ nest g service users

    Creating controller
    	$ nest g controller users

/////////////////////////////////////////////////////////////////////////////////////////////////
React Installation

	Create a react app
		$ npx create-react-app react-codes
	Start react app 
		$ npm start  (to be run root folder of project)

/////////////////////////////////////////////////////////////////////////////////////
Vue JS

	Installing Vue cli:
		$ sudo npm install -g @vue/cli

	Checking whether vue cli is installed or not:
		$ vue --version

	Working with Vuetify:
		$ vue add vuetify

	Starting application
		$ npm run serve

	Installing a package:
		$ npm install vue-chartist
